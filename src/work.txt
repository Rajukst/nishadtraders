import React, { useState, useEffect, useRef } from "react";
import { Container } from "react-bootstrap";
import { useQuery } from "react-query";
import { Link } from "react-router-dom";
import Footer from "../Footer/Footer";
import CustomLoader from "../../CustomLoader/CustomLoader";

const UserList = () => {
  const [search, setSearch] = useState("");
  const [page, setPage] = useState(1);
  const { data: users = [], isLoading } = useQuery(["users", page], async () => {
    const res = await fetch(`https://asadback.onrender.com/detaCollection?page=${page}`);
    const data = await res.json();
    return data;
  });

  const observer = useRef();

  useEffect(() => {
    if (!isLoading) {
      observer.current = new IntersectionObserver((entries) => {
        if (entries[0].isIntersecting) {
          setPage((prevPage) => prevPage + 1);
        }
      });
    }
  }, [isLoading]);

  useEffect(() => {
    if (observer.current) {
      observer.current.disconnect();
    }

    if (!isLoading) {
      observer.current.observe(document.querySelector(".endOfUsers"));
    }

    return () => {
      if (observer.current) {
        observer.current.disconnect();
      }
    };
  }, [isLoading]);

  return (
    <>
      <Container fluid>
        <div className="topColumns">
          {/* Your top columns content */}
        </div>
        <div className="filterDownLoadPress">
          <div className="serarch">
            <input
              type="text"
              name=""
              id=""
              placeholder="Search"
              onChange={(e) => setSearch(e.target.value)}
            />
          </div>
          {/* Other filter and download elements */}
        </div>
        <small className="ps-5">Total Customer:<span className="lenghtCusto">{users.length}</span></small>
        <div className="userShow">
          {isLoading && <CustomLoader />}
          {users
            .filter((item) => {
              return search.toLowerCase() === ""
                ? item
                : item?.name?.toLowerCase().includes(search) ||
                    item.userSerialNo?.includes(search);
            })
            .map((singleData, index) => {
              const totalIncludingPrevJer = parseInt(singleData.prevJer) + parseInt(singleData.total);
              console.log("Total Including prevJer:", totalIncludingPrevJer);

              return (
                <Link
                  key={singleData._id}
                  to={`${singleData._id}`}
                  className="userLinks"
                >
                  <div className="userListss">
                    <p>{singleData?.name}</p>
                    <p>{totalIncludingPrevJer}</p>
                  </div>
                </Link>
              );
            })}
          {!isLoading && <div className="endOfUsers" />}
        </div>
        <div className="customerAdd">
          <Link className="customerAd" to="/add">
            <i className="fa-solid fa-user-plus me-1"></i>Add
          </Link>
        </div>
      </Container>
      <Footer />
    </>
  );
};

export default UserList;
